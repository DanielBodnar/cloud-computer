{
  "author": "Jackson Delahunt <jackson@jacksondelahunt.com>",
  "description": "The Cloud Computer Docker-Compose Configuration",
  "license": "MIT",
  "name": "@cloud-computer/docker-compose",
  "repository": "git@github.com:cloud-computer/cloud-computer.git",
  "scripts": {
    "apply": "yarn apply:terminal; yarn apply:backend & yarn apply:ci & yarn apply:code & yarn apply:jaeger & yarn apply:grafana & wait",
    "apply:backend": "yarn apply:backend:api & yarn apply:backend:pipelines & wait",
    "apply:backend:api": "yarn compose -f stacks/backend-api.yaml up -d",
    "apply:backend:pipelines": "yarn compose -f stacks/backend-pipelines.yaml up -d",
    "apply:ci": "yarn apply:ci:build & yarn apply:ci:drone & wait",
    "apply:ci:build": "yarn compose -f stacks/build.yaml up -d",
    "apply:ci:drone": "yarn compose -f stacks/drone.yaml up -d",
    "apply:code": "yarn compose -f stacks/code.yaml up -d",
    "apply:grafana": "yarn compose -f stacks/grafana.yaml up -d",
    "apply:istio": "yarn compose -f stacks/istio.yaml up -d",
    "apply:jaeger": "yarn compose -f stacks/jaeger.yaml up -d",
    "apply:terminal": "yarn compose -f stacks/terminal.yaml up -d",
    "compose": "scripts/compose.sh",
    "down:backend:api": "yarn compose -f stacks/backend-api.yaml down",
    "down:backend:pipelines": "yarn compose -f stacks/backend-pipelines.yaml down",
    "down:ci:build": "yarn compose -f stacks/build.yaml down",
    "down:ci:drone": "yarn compose -f stacks/drone.yaml down",
    "down:code": "yarn compose -f stacks/code.yaml down",
    "down:grafana": "yarn compose -f stacks/grafana.yaml down",
    "down:jaeger": "yarn compose -f stacks/jaeger.yaml down",
    "down:terminal": "yarn compose -f stacks/terminal.yaml down",
    "hosts": "export $(yarn --cwd ../cloud-computer environment); cat stacks/*.yaml | grep VIRTUAL_HOST | grep CLOUD_COMPUTER_HOST_DNS | sed -E -e \"s/VIRTUAL_HOST://\" -e \"s/:[0-9]{4,5}//g\" | tr , \\\\n | sort | uniq | sed -e 's;$CLOUD_COMPUTER_HOST_DNS;'\"$CLOUD_COMPUTER_HOST_DNS\"';'",
    "hosts:insert": "scripts/hosts-insert.sh",
    "recycle": "yarn stop; yarn --cwd ../containers pull:cloud-computer; yarn start",
    "reload": "yarn --cwd ../docker ps:q --filter name=cloud-computer | xargs -n 1 -P $(cat /proc/cpuinfo | grep processor | wc -l) yarn --cwd ../docker docker restart",
    "restart": "yarn stop; yarn start",
    "restart:backend": "yarn stop:backend; yarn apply:backend",
    "restart:backend:api": "yarn stop:backend:api; yarn apply:backend:api",
    "restart:backend:pipelines": "yarn stop:backend:pipelines; yarn apply:backend:pipelines",
    "restart:ci": "yarn stop:ci; yarn apply:ci",
    "restart:ci:build": "yarn stop:ci:build; yarn apply:ci:build",
    "restart:ci:drone": "yarn stop:ci:drone; yarn apply:ci:drone",
    "restart:code": "yarn stop:code; yarn apply:code",
    "restart:grafana": "yarn stop:grafana; yarn apply:grafana",
    "restart:istio": "yarn stop:istio; yarn apply:istio",
    "restart:jaeger": "yarn stop:jaeger; yarn apply:jaeger",
    "restart:terminal": "yarn stop:terminal; yarn apply:terminal",
    "rm": "yarn --cwd ../docker docker rm -f $@ 2>/dev/null",
    "start": "yarn hosts:insert; yarn apply",
    "start:backend": "yarn apply:terminal; yarn apply:ci; yarn apply:backend:api; yarn apply:backend:pipelines; yarn --cwd ../docker ps:pretty",
    "start:backend:api": "yarn apply:terminal; yarn apply:backend:api; yarn --cwd ../docker ps:pretty",
    "start:backend:pipelines": "yarn apply:terminal; yarn apply:backend:pipelines; yarn --cwd ../docker ps:pretty",
    "start:ci": "yarn apply:terminal; yarn apply:ci:drone; yarn apply:ci:build; yarn --cwd ../docker ps:pretty",
    "start:ci:build": "yarn apply:terminal; yarn apply:ci:build; yarn --cwd ../docker ps:pretty",
    "start:ci:drone": "yarn apply:terminal; yarn apply:ci:drone; yarn --cwd ../docker ps:pretty",
    "start:code": "yarn apply:code; yarn --cwd ../docker ps:pretty",
    "start:grafana": "yarn apply:grafana; yarn --cwd ../docker ps:pretty",
    "start:istio": "yarn apply:istio; yarn --cwd ../docker ps:pretty",
    "start:jaeger": "yarn apply:jaeger; yarn --cwd ../docker ps:pretty",
    "start:mongo:backup": "yarn docker:compose -f stacks/mongodb-backup.yaml up -d",
    "start:terminal": "yarn apply:terminal; yarn --cwd ../docker ps:pretty",
    "stop": "yarn stop:backend & yarn stop:ci & yarn stop:code & yarn stop:jaeger & yarn stop:grafana; yarn stop:terminal",
    "stop:backend": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=tier=backend --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:ci": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=tier=ci --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer}); yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=ci --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:ci:build": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=tier=ci --filter label=namespace=build --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:ci:drone": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=tier=ci --filter label=namespace=drone --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:ci:drone:containers": "yarn rm $(yarn --cwd ../docker ps:aq --filter name=${COMPOSE_PROJECT_NAME:-drone_compose_}); yarn --cwd ../docker docker network rm $(yarn network ls | grep ${COMPOSE_PROJECT_NAME:-drone_compose} | awk '/ / { print $1 }')",
    "stop:code": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=code)",
    "stop:grafana": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=grafana --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:istio": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=istio --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:jaeger": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=jaeger --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})",
    "stop:terminal": "yarn rm $(yarn --cwd ../docker ps:aq --filter label=namespace=terminal --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer})"
  },
  "version": "0.0.1"
}
