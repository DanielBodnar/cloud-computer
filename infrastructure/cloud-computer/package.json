{
  "author": "Jackson Delahunt <jackson@jacksondelahunt.com>",
  "dependencies": {
    "chokidar": "2.1.5",
    "constant-case": "^2.0.0",
    "fs-extra": "^7.0.1",
    "node-docker-api": "https://github.com/stemn/docker-api",
    "tar-stream": "^2.0.1"
  },
  "description": "Welcome $HOME.",
  "devDependencies": {
    "@types/chokidar": "^2.1.3",
    "@types/fs-extra": "^5.0.5",
    "@types/tar-stream": "^1.6.0",
    "tslint": "^5.11.0",
    "typescript": "^3.3.4000"
  },
  "license": "MIT",
  "name": "@cloud-computer/cloud-computer",
  "repository": "git@github.com:cloud-computer/cloud-computer.git",
  "scripts": {
    "bootstrap:backend": "yarn exec:tty:terminal yarn bootstrap:backend",
    "bootstrap:frontend": "yarn exec:tty:terminal yarn bootstrap:frontend",
    "bootstrap:infrastructure": "scripts/bootstrap-infrastructure.sh",
    "bootstrap:local-host": "scripts/bootstrap-local-host.sh",
    "bootstrap:remote-host": "scripts/bootstrap-remote-host.sh",
    "build": "yarn build:typescript",
    "build:typescript": "tsc",
    "build:watch": "yarn build:typescript --watch",
    "clean": "scripts/clean.sh",
    "create": "scripts/create.sh",
    "ctop": "yarn exec:tty:terminal ctop -scale-cpu",
    "ctop:drone": "yarn exec:tty:terminal ctop -f drone",
    "destroy": "yarn --cwd ../terraform destroy",
    "environment": "scripts/environment.sh",
    "environment:name": "scripts/environment-name.sh",
    "exec:tty": "export $(yarn environment); export $(yarn --cwd ../terraform environment); yarn --cwd ../docker docker exec --env COMPOSE_PROJECT_NAME --env CLOUD_COMPUTER_HOST_ID --env CLOUD_COMPUTER_HOST_NAME --env CLOUD_COMPUTER_HOST_USER --env TERRAFORM_TARGET --interactive --tty",
    "exec:tty:terminal": "yarn exec:tty ${COMPOSE_PROJECT_NAME:-cloud-computer}_terminal.cloud_computer_1",
    "hostname": "export $(yarn environment); echo $CLOUD_COMPUTER_HOST_DNS",
    "inspect": "yarn --cwd ../docker docker inspect",
    "lint": "yarn tslint --project tsconfig.lint.json",
    "logs": "yarn logs:backend & yarn logs:ci & wait",
    "logs:drone": "yarn logs:drone:server & yarn logs:drone:webhooks & wait",
    "logs:drone:containers": "yarn exec:tty:terminal curl http://container-logs/logs/name:drone*",
    "logs:drone:server": "yarn logs:follow ${COMPOSE_PROJECT_NAME:-cloud-computer}_drone.cloud_computer_1",
    "logs:drone:webhooks": "yarn logs:follow ${COMPOSE_PROJECT_NAME:-cloud-computer}_drone.webhooks.cloud_computer_1",
    "logs:follow": "yarn --cwd ../docker docker logs --follow --tail=5",
    "logs:ingress": "yarn logs:follow ${COMPOSE_PROJECT_NAME:-cloud-computer}_ingress.cloud_computer_1",
    "nodemon:restart": "yarn --cwd ../docker docker run --rm --volume $CLOUD_COMPUTER_NODEMON_VOLUME:$CLOUD_COMPUTER_NODEMON cloud-computer/cloud-computer:latest touch $CLOUD_COMPUTER_NODEMON/restart",
    "recycle": "scripts/recycle.sh",
    "recycle:clean": "scripts/recycle-clean.sh",
    "services:restart": "yarn services:stop; yarn services:start",
    "services:start": "scripts/services-start.sh",
    "services:stop": "scripts/services-stop.sh",
    "shell": "scripts/shell.sh",
    "start": "scripts/start.sh",
    "sync": "scripts/sync.sh",
    "sync:clean": "scripts/sync.sh --clean",
    "sync:stop": "export $(yarn environment); yarn --cwd ../docker docker rm -f $(yarn --cwd ../docker docker ps -aq --filter name=${COMPOSE_PROJECT_NAME:-cloud-computer}_cloud-computer-sync)",
    "sync:watch": "export $(yarn --cwd ../docker environment); node build/sync.js",
    "tmux": "export $(yarn environment); touch $CLOUD_COMPUTER_TMUX/.tmux.sock; TMUX= tmux -S $CLOUD_COMPUTER_TMUX/.tmux.sock",
    "tmux:dashboard:attach": "yarn tmux new-session -s environment-dashboard-$CLOUD_COMPUTER_TMUX_SESSION_ID-$(date +%M%S) -t environment-dashboard",
    "tmux:dashboard:start": "yarn tmux new-session -d -s environment-dashboard zsh && tmuxinator start dashboard",
    "tmux:dashboard:stop": "yarn tmux:kill-clients; yarn tmux kill-session -t environment-dashboard 2>/dev/null",
    "tmux:dashboard:web:start": "yarn tmux new-session -d -s web-dashboard gotty zsh -c 'yarn --cwd infrastructure/cloud-computer tmux:dashboard:attach'",
    "tmux:dashboard:web:stop": "yarn tmux kill-session -t web-dashboard 2>/dev/null",
    "tmux:desktop:start": "scripts/tmux-desktop-start.sh",
    "tmux:desktop:stop": "scripts/tmux-desktop-stop.sh",
    "tmux:frontend:build:attach": "scripts/tmux-frontend-build-attach.sh",
    "tmux:frontend:build:start": "scripts/tmux-frontend-build-start.sh",
    "tmux:jest:attach": "scripts/tmux-jest-attach.sh",
    "tmux:jest:start": "scripts/tmux-jest-start.sh",
    "tmux:kill-clients": "scripts/tmux-kill-clients.sh",
    "tmux:majestic:attach": "scripts/tmux-majestic-attach.sh",
    "tmux:majestic:start": "scripts/tmux-majestic-start.sh",
    "tmux:server": "yarn tmux:server:start; sleep infinity",
    "tmux:server:start": "scripts/tmux-server-start.sh",
    "tmux:server:stop": "yarn tmux kill-server 2>/dev/null || true",
    "tmux:weechat:attach": "scripts/tmux-weechat-attach.sh",
    "tmux:weechat:start": "scripts/tmux-weechat-start.sh",
    "tmux:xephyr:attach": "scripts/tmux-xephyr-attach.sh",
    "tmux:xephyr:start": "scripts/tmux-xephyr-start.sh",
    "tmux:xephyr:stop": "yarn tmux kill-session -t xephyr 2>/dev/null",
    "watch": "export $(yarn --cwd ../docker environment); nodemon --config node_modules/@cloud-computer/nodemon/nodemon.json"
  },
  "version": "0.0.1"
}
