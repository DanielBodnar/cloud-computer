version: '3.5'

services:

  client:
    image: node:latest
    command: yarn dev
    working_dir: $CLOUD_COMPUTER_REPOSITORY/apps/webapp/client
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:webapp.$CLOUD_COMPUTER_HOST_DNS
      - traefik.port=9998
    volumes:
      - CLOUD_COMPUTER_REPOSITORY:$CLOUD_COMPUTER_REPOSITORY
    depends_on:
      - postgres
      - mail

  hasura:
    image: hasura/graphql-engine:v1.0.0-beta.2
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: ${HASURA_GRAPHQL_ENABLE_TELEMETRY}
      HASURA_GRAPHQL_CORS_DOMAIN: ${HASURA_GRAPHQL_CORS_DOMAIN}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:api.webapp.$CLOUD_COMPUTER_HOST_DNS
      - traefik.port=8080
    links:
      - mail
    depends_on:
      - postgres
      - mail

  auth:
    build:
      context: ./auth-service
      dockerfile: Dockerfile.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      JSON_SECRET: ${JSON_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_CALLBACK: ${GOOGLE_CALLBACK}
      REACT_APP: ${REACT_APP}
    labels:
      - traefik.enable=true
      - traefik.frontend.rule=Host:auth.webapp.$CLOUD_COMPUTER_HOST_DNS
      - traefik.port=3000
    depends_on:
      - postgres

  mail:
    build:
      context: ./mail-service
      dockerfile: Dockerfile.dev
    environment:
      MAIL_SERVICE_DOMAIN: ${MAIL_SERVICE_DOMAIN}
      MAIL_SERVICE_APIKEY: ${MAIL_SERVICE_APIKEY}
    depends_on:
      - postgres

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

volumes:
  CLOUD_COMPUTER_REPOSITORY:
