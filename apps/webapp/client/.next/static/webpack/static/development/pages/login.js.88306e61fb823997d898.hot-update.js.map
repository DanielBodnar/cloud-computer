{"version":3,"file":"static/webpack/static/development/pages/login.js.88306e61fb823997d898.hot-update.js","sources":["webpack:///./pages/login.js"],"sourcesContent":["import {compose} from 'react-apollo';\nimport {Form, Icon, Input, Button, Checkbox, Row, Col} from 'antd';\n\n/** libs **/\nimport {withAuthClient} from '../lib/with-auth-client';\n\n/** styles **/\nconst styles = {\n    loginForm: {\n        maxWidth: '300px',\n        margin: '45% auto'\n    },\n    loginFormForgot: {\n        float: 'right'\n    },\n    loginFormButton: {\n        width: '100%'\n    },\n    loginGoogle: {\n        width: '100%'\n    }\n};\n\n\nconst Login = (props) => {\n    const {getFieldDecorator} = props.form;\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log('Received values of form: ', values);\n            }\n        });\n    };\n    return (\n        <Row>\n            <Col offset={8} span={8}>\n                <Form onSubmit={handleSubmit} style={styles.loginForm}>\n                    <Form.Item>\n                        {getFieldDecorator('username', {\n                            rules: [{required: true, message: 'Please input your username!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                placeholder=\"Username\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('password', {\n                            rules: [{required: true, message: 'Please input your Password!'}],\n                        })(\n                            <Input\n                                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />,\n                        )}\n                    </Form.Item>\n                    <Form.Item>\n                        {getFieldDecorator('remember', {\n                            valuePropName: 'checked',\n                            initialValue: true,\n                        })(<Checkbox>Remember me</Checkbox>)}\n                        <a style={styles.loginFormForgot} href=\"\">\n                            Forgot password\n                        </a>\n                        <Button type=\"primary\" htmlType=\"submit\" style={styles.loginFormButton}>\n                            Log in\n                        </Button>\n                        <Button icon=\"google\" style={styles.loginGoogle} onClick={()=>window.open(process.env.GOOGLE_REDIRECT)}>\n                            Sign-In with Google\n                        </Button>\n                        {/*<Button icon=\"facebook\" style={styles.loginGoogle} onClick={()=>window.open('http://localhost:9995/facebook')}>*/}\n                            {/*Sign-In with Facebook*/}\n                        {/*</Button>*/}\n                        Or <a href=\"\">register now!</a>\n                    </Form.Item>\n                </Form>\n            </Col>\n        </Row>\n    );\n};\n\n\n/** add HOC's need for the component **/\nexport default compose(\n    Form.create({name: 'login'}),\n    withAuthClient\n)(Login);"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAXA;AACA;AAgBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AACA;AADA;AACA;AAAA;;;;A","sourceRoot":""}